#pragma shader_stage(compute)
#extension GL_ARB_separate_shader_objects : enable

#include "lib/blend.glsl"

layout (local_size_x = 16, local_size_y = 16) in;

layout (set = 0, binding = 0, rgba32f) restrict uniform writeonly image2D target;
layout (set = 0, binding = 1, rgba32f) restrict uniform readonly image2D tex_world;
layout (set = 0, binding = 2, rgba32f) restrict uniform readonly image2D tex_ui;


void main() {
    const ivec2 pos = ivec2(gl_GlobalInvocationID.xy);

    vec4 color_world = imageLoad(tex_world, pos);
    vec4 color_ui = imageLoad(tex_ui, pos);

    imageStore(target, pos, blend(color_ui, color_world));
//    imageStore(target, pos, color_world);
}
